name: Test Stitch for VSCode on MacOS

on:
  workflow_dispatch:
  push:

permissions:
  contents: read
  actions: read
  checks: write

defaults:
  run:
    shell: bash

jobs:
  test-mac:
    runs-on: macos-latest
    steps:
      # Setup
      - uses: actions/checkout@v3
        with:
          lfs: true
      - uses: actions/setup-node@v3
        with:
          node-version: 18.18.0

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 8
          run_install: false
      - run: pnpm config set pnpm-prefix ~/.pnpm-global

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      # Remove any existing pnpm-lock.yaml files, which are
      # both platform-specific and will likely halt the build.
      - name: Remove pnpm-lock.yaml
        run: rm -f pnpm-lock.yaml

      # Cache for faster tests
      - uses: actions/cache/save@v3
        name: Setup pnpm cache
        if: always()
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      # Env vars
      - name: Set Environment Variables
        run: |
          echo "APPDATA=$HOME/.config" >> $GITHUB_ENV
          echo "PROGRAMFILES=$HOME/Applications" >> $GITHUB_ENV
          echo "PROGRAMDATA=/Users/Shared/" >> $GITHUB_ENV

      - name: Make dirs if they don't exist
        run: |
          mkdir -p $HOME/.config
          mkdir -p $HOME/Applications
          mkdir -p /Users/Shared/

      # Install dependencies
      - run: corepack enable
      - run: pnpm install --filter=bscotch-stitch-vscode...
      - run: pwd

      # Build depdenencies
      - name: Build
        run: pnpm turbo run build --only --filter=bscotch-stitch-vscode...

      # Run full tests
      - name: test
        # Site and gcdata are not in the scope of this workflow
        run: pnpm turbo run test:auto --filter=\!@bscotch/gcdata... --filter=\!@bscotch/stitch-site... --continue -- --continue=true -p --exit -- -y
        env:
          APPDATA: ${{ env.APPDATA }}
          PROGRAMFILES: ${{ env.PROGRAMFILES }}
          PROGRAMDATA: ${{ env.PROGRAMDATA }}

      # Report
      - name: Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure()    # run this step even if previous step failed
        with:
          name: Mocha tests            # Name of the check run which will be created
          path: packages/*/test-results.json    # Path to test results
          reporter: mocha-json
          fail-on-error: false