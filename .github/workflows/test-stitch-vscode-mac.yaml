name: Test Stitch for VSCode on MacOS

on:
  workflow_dispatch:
  push:

permissions:
  contents: read
  actions: read
  checks: write

defaults:
  run:
    shell: bash

jobs:
  test-mac:
    runs-on: macos-latest
    steps:
      # Setup
      - uses: actions/checkout@v3
        with:
          lfs: true
      - uses: actions/setup-node@v3
        with:
          node-version: 18.18.0

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 8
          run_install: false
      
      - name: pnpm config
        run: |
          pnpm config set pnpm-prefix ~/.pnpm-global
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      # Remove any existing pnpm-lock.yaml files, which are
      # both platform-specific and will likely halt the build.
      - name: Remove pnpm-lock.yaml
        run: rm -f pnpm-lock.yaml

      # Cache for faster tests
      - uses: actions/cache/save@v3
        name: Setup pnpm cache
        if: always()
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-



      # Env vars
      - name: Set Environment Variables
        run: |
          echo "APPDATA=$HOME/.config" >> $GITHUB_ENV
          echo "PROGRAMFILES=/Applications" >> $GITHUB_ENV
          echo "PROGRAMDATA=/Users/Shared/" >> $GITHUB_ENV

      - name: Make dirs if they don't exist
        run: |
          mkdir -p $APPDATA
          mkdir -p $PROGRAMFILES
          mkdir -p $PROGRAMDATA


      # Install GMS
      - name: Install GMS
        run: |
          curl -L https://gms.yoyogames.com/GameMakerStudio2-2022.300.0.488.pkg -o gms.pkg
          sudo installer -pkg gms.pkg -target /Applications -verbose
      
      # Debug - list files in /Applications
      - name: List files in /
        run: ls -la /
      
      # Debug - list files in $PROGRAMFILES
      - name: List files in /Applications/
        run: ls -la /Applications/
      
      # Debug - list files in /Users/$USER/Applications
      - name: List files in /Users/$USER/Applications
        run: |
          if [ -d "/Users/$USER/Applications" ]; then
            ls -la /Users/$USER/Applications
          else
            echo "Directory /Users/$USER/Applications does not exist."
          fi
          

      # Install GMS runtime
      - name: Install runtime
        run: |
          PATH_RUNTIME="${PROGRAMDATA}GameMakerStudio2-Beta/Cache/runtimes/runtime-2022.300.0.478"
          mkdir -p "$PATH_RUNTIME/download"

          # General
          curl -L https://gm2016.yoyogames.com/b5bacc1c-45d8-4116-8583-12b6fbf3fac5.zip \
            -o "$PATH_RUNTIME/download/b5bacc1c-45d8-4116-8583-12b6fbf3fac5.zip"

          # Mac
          curl -L https://gm2016.yoyogames.com/93106ab6-4cb8-4c1a-bb8f-74851ba0cf6f.zip \
            -o "$PATH_RUNTIME/download/93106ab6-4cb8-4c1a-bb8f-74851ba0cf6f.zip"

          # Mac YYC
          curl -L https://gm2016.yoyogames.com/61d122b9-0176-4056-9cc4-8d412cc2429d.zip \
            -o "$PATH_RUNTIME/download/61d122b9-0176-4056-9cc4-8d412cc2429d.zip"


          # Windows
          curl -L https://gm2016.yoyogames.com/9a3cbb36-96ee-48af-851b-8d77737a7a0b.zip \
            -o "$PATH_RUNTIME/download/9a3cbb36-96ee-48af-851b-8d77737a7a0b.zip"


          open -a "/Applications/GameMaker Studio 2 Beta.app"


      # Wait for GMS runtime
      - name: Wait for runtime
        run: |
          sleep 5
          if [ ! -d "${PROGRAMDATA}GameMakerStudio2-Beta" ]; then
            echo "Directory ${PROGRAMDATA}GameMakerStudio2-Beta does not exist."
            exit 1
          fi

          attempts=0
          max_attempts=30
          while [ ! -f "${PROGRAMDATA}GameMakerStudio2-Beta/Cache/runtimes/runtime-2022.300.0.478/bin/Igor.exe" ]; do
            echo "Waiting for Igor to appear... ($attempts/$max_attempts)"
            sleep 4
            ((attempts++))
            if [ $attempts -eq $max_attempts ]; then
              echo "Timeout waiting for Igor"
              echo "Cache/runtimes tree:"
              ls -la "${PROGRAMDATA}GameMakerStudio2-Beta/Cache/runtimes"

              echo "runtime-2022.300.0.478 tree:"
              ls -la "${PROGRAMDATA}GameMakerStudio2-Beta/Cache/runtimes/runtime-2022.300.0.478"

              exit 1
            fi
          done


      # Install dependencies
      - run: corepack enable
      - run: pnpm install --filter=bscotch-stitch-vscode...
      - run: pwd

      # Build depdenencies
      - name: Build
        run: pnpm turbo run build --only --filter=bscotch-stitch-vscode...

      # Run full tests
      - name: test
        # Site and gcdata are not in the scope of this workflow
        run: pnpm turbo run test:auto --filter=\!@bscotch/gcdata... --filter=\!@bscotch/stitch-site... --continue -- --continue=true -p --exit
        env:
          APPDATA: ${{ env.APPDATA }}
          PROGRAMFILES: ${{ env.PROGRAMFILES }}
          PROGRAMDATA: ${{ env.PROGRAMDATA }}

      # Report
      - name: Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure()    # run this step even if previous step failed
        with:
          name: Mocha tests            # Name of the check run which will be created
          path: packages/*/test-results.json    # Path to test results
          reporter: mocha-json
          fail-on-error: false